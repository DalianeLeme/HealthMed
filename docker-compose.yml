services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    user: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    # volumes:
     # - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "NovaSenhaForte123"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: always

  auth.api:
    build:
      context: .
      dockerfile: HealthMed.Auth.API/Dockerfile
    ports:
      - "5000:80"
    depends_on:
      - rabbitmq
      - sqlserver

  appointments.api:
    build:
      context: .
      dockerfile: HealthMed.Appointments/Dockerfile
    ports:
      - "5001:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      sqlserver:
        condition: service_started
    environment:
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Port: 5672
      RabbitMQ__Username: guest
      RabbitMQ__Password: guest

  schedule.api:
    build:
      context: .
      dockerfile: HealthMed.Schedule.API/Dockerfile
    ports:
      - "5002:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      sqlserver:
        condition: service_started
    environment:
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Port: 5672
      RabbitMQ__Username: guest
      RabbitMQ__Password: guest

volumes:
  sqlserver_data:
  rabbitmq_data:
